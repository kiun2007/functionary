<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kiun.functionary.dao.gks.SearchNoticeMapper">
  <resultMap id="BaseResultMap" type="com.kiun.functionary.dao.gks.entity.JobNotice">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2023-09-12 19:52:33.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="organ_id" jdbcType="VARCHAR" property="organId" />
    <result column="info_url" jdbcType="VARCHAR" property="infoUrl" />
    <result column="job_url" jdbcType="VARCHAR" property="jobUrl" />
    <result column="detail_url" jdbcType="VARCHAR" property="detailUrl" />
    <result column="add_user_id" jdbcType="VARCHAR" property="addUserId" />
    <result column="add_user_nm" jdbcType="VARCHAR" property="addUserNm" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="upd_user_id" jdbcType="VARCHAR" property="updUserId" />
    <result column="upd_user_nm" jdbcType="VARCHAR" property="updUserNm" />
    <result column="upd_time" jdbcType="TIMESTAMP" property="updTime" />
    <result column="upd_terminal_ip" jdbcType="VARCHAR" property="updTerminalIp" />
  </resultMap>

  <resultMap id="JobDetailsResultMap" type="com.kiun.functionary.dao.gks.entity.JobDetails">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2023-10-14 21:01:04.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="job_notice" jdbcType="VARCHAR" property="jobNotice" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_count" jdbcType="INTEGER" property="jobCount" />
    <result column="job_salary" jdbcType="DECIMAL" property="jobSalary" />
    <result column="job_require" jdbcType="VARCHAR" property="jobRequire" />
    <result column="job_work" jdbcType="VARCHAR" property="jobWork" />
    <result column="job_tele" jdbcType="VARCHAR" property="jobTele" />
    <result column="factor_speciality" jdbcType="VARCHAR" property="factorSpeciality" />
    <result column="factor_education" jdbcType="VARCHAR" property="factorEducation" />
    <result column="factor_undergo" jdbcType="VARCHAR" property="factorUndergo" />
    <result column="factor_gender" jdbcType="VARCHAR" property="factorGender" />
    <result column="factor_domicile" jdbcType="VARCHAR" property="factorDomicile" />
    <result column="factor_age_max" jdbcType="INTEGER" property="factorAgeMax" />
    <result column="factor_age_min" jdbcType="INTEGER" property="factorAgeMin" />
    <result column="factor_desc" jdbcType="VARCHAR" property="factorDesc" />
    <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
    <result column="add_user_id" jdbcType="VARCHAR" property="addUserId" />
    <result column="add_user_nm" jdbcType="VARCHAR" property="addUserNm" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="upd_user_id" jdbcType="VARCHAR" property="updUserId" />
    <result column="upd_user_nm" jdbcType="VARCHAR" property="updUserNm" />
    <result column="upd_time" jdbcType="TIMESTAMP" property="updTime" />
    <result column="upd_terminal_ip" jdbcType="VARCHAR" property="updTerminalIp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2023-09-12 19:52:33.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2023-09-12 19:52:33.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2023-09-12 19:52:33.
    -->
    id, title, start_time, end_time, publish_time, organ_id, info_url, job_url,
    detail_url, add_user_id, add_user_nm, add_time, upd_user_id, upd_user_nm, upd_time,
    upd_terminal_ip
  </sql>

  <sql id="Details_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2023-10-14 21:01:04.
    -->
    id, job_notice, job_name, job_count, job_salary, job_require, job_work, job_tele,
    factor_speciality, factor_education, factor_undergo, factor_gender, factor_domicile,
    factor_age_max, factor_age_min, factor_desc, source_url, add_user_id, add_user_nm,
    add_time, upd_user_id, upd_user_nm, upd_time, upd_terminal_ip
  </sql>

  <select id="searchNoticeByUserId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    (
      SELECT
        DISTINCT vgji.job_notice
      FROM
        gks_job_details vgji
        LEFT JOIN gks_job_must spec_gjm ON spec_gjm.dict_id = 'gks_speciality' AND spec_gjm.job_id = vgji.id
        LEFT JOIN gks_job_must_age gjma ON gjma.job_id = vgji.id
      WHERE
      (
        vgji.factor_education IS NULL
        OR vgji.factor_education &lt;= (SELECT @edut := dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_education')
      )
      AND
      (
        spec_gjm.dict_item_key IS NULL
        OR spec_gjm.dict_item_key = (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_speciality')
      )
      AND
      (
        vgji.factor_gender IS NULL
        OR vgji.factor_gender = (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_gender')
      )
      AND
      (
        vgji.factor_undergo IS NULL
        OR vgji.factor_undergo = (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_undergo')
      )
      AND
      (
        gjma.job_id IS NULL
        OR (
          gjma.education_id &lt;= @edut AND
          (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'user_birthday')
          BETWEEN gjma.old_age AND gjma.young_age
        )
      )
      AND
      (
        vgji.region IS NULL
        OR vgji.region IN (
          <if test="region == null">
            SELECT
                sdi.item_key
            FROM
            (
                SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_region'
            ) user_region
            LEFT JOIN sys_dict_item sdia ON sdia.dict_id = 'gks_region' AND user_region.dict_item_key = sdia.item_key
            LEFT JOIN sys_dict_item sdi
            ON sdi.dict_id = 'gks_region' AND
            (
                sdi.item_key LIKE CONCAT(SUBSTR(user_region.dict_item_key, 1, sdia.`level` * 2),'%')
            )
          </if>
          <if test="region != null">
            #{region}
          </if>
        )
      )
      AND
      (
        vgji.type IS NULL
        OR
        vgji.type IN (
        <if test="type == null">
          SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_type'
        </if>
        <if test="type != null">
          #{type}
        </if>
        )
      )
    ) search_table
    LEFT JOIN gks_job_notice gjn ON search_table.job_notice = gjn.ID
  </select>


  <!--详情查询-->
  <select id="searchDetailsByNoticeId" resultMap="JobDetailsResultMap">
    SELECT
        <include refid="Details_Column_List" />
    FROM
      gks_job_details vgji
      LEFT JOIN gks_job_must spec_gjm ON spec_gjm.dict_id = 'gks_speciality' AND spec_gjm.job_id = vgji.id
      LEFT JOIN gks_job_must_age gjma ON gjma.job_id = vgji.id
    WHERE
    vgji.job_notice = #{noticeId} AND
    (
      vgji.factor_education IS NULL
      OR vgji.factor_education &lt;= (SELECT @edut := dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_education')
    )
    AND
    (
      spec_gjm.dict_item_key IS NULL
      OR spec_gjm.dict_item_key = (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_speciality')
    )
    AND
    (
      vgji.factor_gender IS NULL
      OR vgji.factor_gender = (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_gender')
    )
    AND
    (
      vgji.factor_undergo IS NULL
      OR vgji.factor_undergo = (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'gks_undergo')
    )
    AND
    (
      gjma.job_id IS NULL
      OR (
        gjma.education_id &lt;= @edut AND
        (SELECT dict_item_key FROM gks_user_attribute WHERE user_id = #{userId} AND dict_id = 'user_birthday')
        BETWEEN gjma.old_age AND gjma.young_age
      )
    )
  </select>
</mapper>
