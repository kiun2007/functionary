<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kiun.functionary.dao.lz.BettingHeadMapper">
  <resultMap id="BaseResultMap" type="com.kiun.functionary.dao.lz.entity.BettingHead">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="betting_count" jdbcType="INTEGER" property="bettingCount" />
    <result column="betting_amount" jdbcType="DECIMAL" property="bettingAmount" />
    <result column="betting_time" jdbcType="TIMESTAMP" property="bettingTime" />
    <result column="betting_type" jdbcType="CHAR" property="bettingType" />
    <result column="state" jdbcType="CHAR" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    id, user_id, betting_count, betting_amount, betting_time, betting_type, state
  </sql>
  <select id="selectByExample" parameterType="com.kiun.functionary.dao.lz.entity.BettingHeadExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lz_betting_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    select 
    <include refid="Base_Column_List" />
    from lz_betting_head
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    delete from lz_betting_head
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kiun.functionary.dao.lz.entity.BettingHeadExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    delete from lz_betting_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertOne" parameterType="com.kiun.functionary.dao.lz.entity.BettingHead">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    insert into lz_betting_head (id, user_id, betting_count, 
      betting_amount, betting_time, betting_type, 
      state)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{bettingCount,jdbcType=INTEGER}, 
      #{bettingAmount,jdbcType=DECIMAL}, #{bettingTime,jdbcType=TIMESTAMP}, #{bettingType,jdbcType=CHAR}, 
      #{state,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kiun.functionary.dao.lz.entity.BettingHead">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    insert into lz_betting_head
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bettingCount != null">
        betting_count,
      </if>
      <if test="bettingAmount != null">
        betting_amount,
      </if>
      <if test="bettingTime != null">
        betting_time,
      </if>
      <if test="bettingType != null">
        betting_type,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bettingCount != null">
        #{bettingCount,jdbcType=INTEGER},
      </if>
      <if test="bettingAmount != null">
        #{bettingAmount,jdbcType=DECIMAL},
      </if>
      <if test="bettingTime != null">
        #{bettingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bettingType != null">
        #{bettingType,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kiun.functionary.dao.lz.entity.BettingHeadExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    select count(*) from lz_betting_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    update lz_betting_head
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.bettingCount != null">
        betting_count = #{record.bettingCount,jdbcType=INTEGER},
      </if>
      <if test="record.bettingAmount != null">
        betting_amount = #{record.bettingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.bettingTime != null">
        betting_time = #{record.bettingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bettingType != null">
        betting_type = #{record.bettingType,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    update lz_betting_head
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      betting_count = #{record.bettingCount,jdbcType=INTEGER},
      betting_amount = #{record.bettingAmount,jdbcType=DECIMAL},
      betting_time = #{record.bettingTime,jdbcType=TIMESTAMP},
      betting_type = #{record.bettingType,jdbcType=CHAR},
      state = #{record.state,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kiun.functionary.dao.lz.entity.BettingHead">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    update lz_betting_head
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bettingCount != null">
        betting_count = #{bettingCount,jdbcType=INTEGER},
      </if>
      <if test="bettingAmount != null">
        betting_amount = #{bettingAmount,jdbcType=DECIMAL},
      </if>
      <if test="bettingTime != null">
        betting_time = #{bettingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bettingType != null">
        betting_type = #{bettingType,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kiun.functionary.dao.lz.entity.BettingHead">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:13:22.
    -->
    update lz_betting_head
    set user_id = #{userId,jdbcType=VARCHAR},
      betting_count = #{bettingCount,jdbcType=INTEGER},
      betting_amount = #{bettingAmount,jdbcType=DECIMAL},
      betting_time = #{bettingTime,jdbcType=TIMESTAMP},
      betting_type = #{bettingType,jdbcType=CHAR},
      state = #{state,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where id = #{id,jdbcType=VARCHAR}

  </select>
  
  <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where user_id = #{userId,jdbcType=VARCHAR}

  </select>
  
  <select id="selectByBettingCount" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where betting_count = #{bettingCount,jdbcType=INTEGER}

  </select>
  
  <select id="selectByBettingAmount" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where betting_amount = #{bettingAmount,jdbcType=DECIMAL}

  </select>
  
  <select id="selectByBettingTime" parameterType="java.util.Date" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where betting_time = #{bettingTime,jdbcType=TIMESTAMP}

  </select>
  
  <select id="selectByBettingType" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where betting_type = #{bettingType,jdbcType=CHAR}

  </select>
  
  <select id="selectByState" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_betting_head where state = #{state,jdbcType=CHAR}

  </select>
</mapper>