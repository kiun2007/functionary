<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kiun.functionary.dao.lz.BettingPayMapper">
  <resultMap id="BaseResultMap" type="com.kiun.functionary.dao.lz.entity.BettingPay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="betting_id" jdbcType="VARCHAR" property="bettingId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    id, betting_id, user_id, transaction_id, amount, create_time, pay_time
  </sql>
  <select id="selectByExample" parameterType="com.kiun.functionary.dao.lz.entity.BettingPayExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lz_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    select 
    <include refid="Base_Column_List" />
    from lz_pay
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    delete from lz_pay
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kiun.functionary.dao.lz.entity.BettingPayExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    delete from lz_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertOne" parameterType="com.kiun.functionary.dao.lz.entity.BettingPay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    insert into lz_pay (id, betting_id, user_id, 
      transaction_id, amount, create_time, 
      pay_time)
    values (#{id,jdbcType=VARCHAR}, #{bettingId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{transactionId,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kiun.functionary.dao.lz.entity.BettingPay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    insert into lz_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bettingId != null">
        betting_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bettingId != null">
        #{bettingId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kiun.functionary.dao.lz.entity.BettingPayExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    select count(*) from lz_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    update lz_pay
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bettingId != null">
        betting_id = #{record.bettingId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    update lz_pay
    set id = #{record.id,jdbcType=VARCHAR},
      betting_id = #{record.bettingId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kiun.functionary.dao.lz.entity.BettingPay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    update lz_pay
    <set>
      <if test="bettingId != null">
        betting_id = #{bettingId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kiun.functionary.dao.lz.entity.BettingPay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2024-05-26 11:50:48.
    -->
    update lz_pay
    set betting_id = #{bettingId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where id = #{id,jdbcType=VARCHAR}

  </select>
  
  <select id="selectByBettingId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where betting_id = #{bettingId,jdbcType=VARCHAR}

  </select>
  
  <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where user_id = #{userId,jdbcType=VARCHAR}

  </select>
  
  <select id="selectByTransactionId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where transaction_id = #{transactionId,jdbcType=VARCHAR}

  </select>
  
  <select id="selectByAmount" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where amount = #{amount,jdbcType=DECIMAL}

  </select>
  
  <select id="selectByCreateTime" parameterType="java.util.Date" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where create_time = #{createTime,jdbcType=TIMESTAMP}

  </select>
  
  <select id="selectByPayTime" parameterType="java.util.Date" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lz_pay where pay_time = #{payTime,jdbcType=TIMESTAMP}

  </select>
</mapper>